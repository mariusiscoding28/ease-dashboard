/* Color complete map */
$mic-colors: (
  "primary": (name: primary,
    variations: (main: #34426f,
      100: #a9b0c2,
      200: #a0a8bc,
      300: #969fb5,
      400: #2f3c65,
      500: #181f34,
      600: #161c2f,
    ),
  ),
  "secondary": (name: secondary,
    variations: (main: #7d83ff,
      100: #bdbfff,
      200: #c3c5ff,
      300: #c8caff,
      400: #414384,
      500: #3b3d78,
      600: #36376d,
    ),
  ),
  "orange": (name: "orange",
    variations: (main: #fd8b49,
      100: #fdc4a1,
      200: #fdc9aa,
      300: #fdceb2,
      400: #fda977,
      500: #fda069,
      600: #fd965a,
    ),
  ),
  "green": (name: "green",
    variations: (main: #5fab76,
      100: #add4b8,
      200: #b4d8be,
      300: #bbdcc4,
      400: #87c097,
      500: #7bba8d,
      600: #6eb382,
    ),
  ),
  "blue": (name: "blue",
    variations: (main: #4a529d,
      100: #9faac4,
      200: #a8b2c9,
      300: #b0b9ce,
      400: #7184a9,
      500: #6378a0,
      600: #536b97,
    ),
  ),
  "red": (name: "red",
    variations: (main: #c44f4f,
      100: #c098a2,
      200: #c6a1aa,
      300: #cbaab2,
      400: #a36978,
      500: #9a5a6a,
      600: #a85661,
    ),
  ),
  "gray": (name: "gray",
    variations: (main: #f3f3f9,
      50: #fefefe,
      100: #fafafa,
      200: #f5f5fa,
      300: #f7f7fa,
      400: #dddde2,
      500: #c9c9cd,
      600: #9191a1,
    ),
  ),
);

/* Complete CSS Variables */
:root {

  /* SASS loop to generate all custom color CSS variables from the colors map */
  @each $block,
  $children in $mic-colors {

    @each $child,
    $value in $children {
      $name: map.get($children, name);
      $mainClrs: map.get($children, main);
      $variation: map.get($children, variations);

      @if type-of($value)==map {

        @each $item,
        $val in $value {
          @if $item ==main {
            --e-#{$name}-clr: #{$val};
          }

          @else {
            --e-#{$name}-#{$item}-clr: #{$val};
          }
        }
      }
    }
  }

  /* ************** COLORS ************** */
  --global-bg-clr: var(--e-gray-clr);
  /* Sidebar */
  --sidebar-bg-clr: var(--e-primary-clr);
  --sidebar-menu-item-clr: var(--e-gray-50-clr);
  --sidebar-menu-item-hvr-bg-clr: var(--e-primary-400-clr);
  --sidebar-menu-item-active-brd-clr: var(--e-secondary-clr);
  --sidebar-menu-title-clr: var(--e-gray-500-clr);
  --sidebar-empl-of-month-bg-clr: rgba(52, 66, 111, 0.8);
  /* Navbar */
  --navbar-bg-clr: var(--e-gray-50-clr);
  /* Card */
  --card-bg-clr: var(--e-gray-50-clr);
  /* Border */
  --brdr-clr: var(--e-gray-300-clr);
  /* Table */
  --tbl-header-bg-clr: var(--e-gray-100-clr);
  /* Typography */
  --global-text-clr: var(--e-primary-600-clr);
  --faded-text-clr: var(--e-gray-500-clr);
  --link-clr: var(--e-secondary-clr);
  /* Icon */
  --default-icon-clr: var(--e-primary-600-clr);
  --default-icon-hvr-bg-clr: var(--e-gray-clr);
  /* Badges */
  --bdg-success-bg-clr: var(--e-green-100-clr);
  --bdg-success-text-clr: var(--e-green-clr);
  --bdg-info-bg-clr: var(--e-secondary-100-clr);
  --bdg-info-text-clr: var(--e-secondary-clr);
  --bdg-warn-bg-clr: var(--e-orange-100-clr);
  --bdg-warn-text-clr: var(--e-orange-clr);
  --bdg-danger-bg-clr: var(--e-red-100-clr);
  --bdg-danger-text-clr: var(--e-red-clr);
  /* Form */
  --input-bg-clr: var(--e-gray-clr);
  --input-brdr-clr: var(--e-primary-clr);
  --textarea-bg-clr: transparent;
  --textarea-brdr-clr: var(--e-gray-clr);
  /* Button */
  --btn-default-bg-clr: var(--e-primary-400-clr);
  --btn-default-text-clr: var(--e-gray-50-clr);
  --btn-primary-bg-clr: var(--e-primary-100-clr);
  --btn-primary-text-clr: var(--e-primary-clr);
  --btn-success-bg-clr: var(--e-green-100-clr);
  --btn-success-text-clr: var(--e-green-clr);
  --btn-info-bg-clr: var(--e-secondary-100-clr);
  --btn-info-text-clr: var(--e-secondary-clr);
  --btn-warn-bg-clr: var(--e-orange-100-clr);
  --btn-warn-text-clr: var(--e-orange-clr);
  --btn-danger-bg-clr: var(--e-red-100-clr);
  --btn-danger-text-clr: var(--e-red-clr);
}